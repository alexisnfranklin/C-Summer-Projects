using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Collections;

namespace Hangman
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        //all the words
        string[] words;
        //the blanks you fill in
        ArrayList guessText = new ArrayList();
        //the word
        String currentWord;
        //guessed letters
        String guessedLetters = "";
        //the blanks you fill in in String form
        String guessTextString = "";
        int bodyNum = 0;
        public MainWindow()
        {
            InitializeComponent();
        }

        private void enter_Click(object sender, RoutedEventArgs e)
        {
            String userGuess = guess.Text;
            guess.Text = "";
            if (IsChar(userGuess))
            {
                if (bodyNum <= 5)
                {
                    if (currentWord.Contains(userGuess))
                    {
                        for (int i = 0; i < currentWord.Length; i++)
                        {
                            if (currentWord.Substring(i, 1).Equals(userGuess))
                            {
                                guessText[i] = userGuess + " ";
                            }
                            else { }
                        }
                        guessTextString = "";
                        for (int i = 0; i < guessText.Count; i++)
                        {
                            guessTextString = guessTextString + (String)guessText[i];
                        }
                        word.Text = guessTextString;
                    }
                    else
                    {
                        if (guessedLetters.Contains(userGuess)) { }
                        else
                        {
                            guessedLetters = guessedLetters + userGuess + "  ";
                            previousGuesses.Text = guessedLetters;
                            DrawBody();
                        }
                    }
                }
                else { }
            }
            else
            {
                errorMessage.Text = "Please enter a single letter";
                errorMessage.Foreground = Brushes.Red;
            }
            CheckWord();            
        }

        private Boolean IsChar(String s)
        {
            try
            {
                Char.Parse(s);
                return true;
            }
            catch (System.FormatException e)
            {
                return false;
            }
        }

        private void newWord_Click(object sender, RoutedEventArgs e)
        {
            errorMessage.Foreground = Brushes.White;
            currentWord = GetWord();
            guessedLetters = "";
            guessText.Clear();
            guessTextString = "";
            NewBody();
            bodyNum = 0;
            for(int i = 0; i < currentWord.Length; i++)
            {
                guessText.Add("___   ");
            }
            for(int i = 0; i < guessText.Count; i++)
            {
                guessTextString = guessTextString + (String)guessText[i];
            }
            word.Text = guessTextString;
            previousGuesses.Text = guessedLetters;
        }

        //returns a random word
        private String GetWord()
        {
            if (words == null)
            {
                CreateWords();
            }
            Random rand = new Random();
            int pick = rand.Next(words.Length);
            return words[pick];
        }

        private void Kill()
        {
            word.Text = currentWord;
            errorMessage.Text = "You're dead. RIP";
            errorMessage.Foreground = Brushes.Red;
            head.Stroke = Brushes.Red;
            body.Stroke = Brushes.Red;
            leftLeg.Stroke = Brushes.Red;
            rightLeg.Stroke = Brushes.Red;
            leftArm.Stroke = Brushes.Red;
            rightArm.Stroke = Brushes.Red;
        }

        private void CheckWord()
        {
            if (guessTextString.Contains("_")) { }
            else
            {
                errorMessage.Text = "YOU GUESSED THE WORD!";
                errorMessage.Foreground = Brushes.Green;
                Save();
            }
        }

        private void DrawBody()
        {
            if(bodyNum == 0)
            {
                head.Stroke = Brushes.Black;
            }
            else if(bodyNum == 1)
            {
                body.Stroke = Brushes.Black;
            }
            else if(bodyNum == 2)
            {
                leftLeg.Stroke = Brushes.Black;
            }
            else if(bodyNum == 3)
            {
                rightLeg.Stroke = Brushes.Black;
            }
            else if(bodyNum == 4)
            {
                leftArm.Stroke = Brushes.Black;
            }
            else if(bodyNum == 5)
            {
                rightArm.Stroke = Brushes.Black;
                Kill();
            }
            bodyNum++;
        }

        //paints body black and takes the body down when won
        private void Save()
        {

            head.Stroke = Brushes.Black;
            body.Stroke = Brushes.Black;
            leftLeg.Stroke = Brushes.Black;
            rightLeg.Stroke = Brushes.Black;
            leftArm.Stroke = Brushes.Black;
            rightArm.Stroke = Brushes.Black;

            Thickness headMargin = head.Margin;
            headMargin.Top = 184;
            headMargin.Left = 352;
            head.Margin = headMargin;

            Thickness bodyMargin = body.Margin;
            bodyMargin.Top = 228;
            bodyMargin.Left = 374;
            body.Margin = bodyMargin;

            Thickness leftLegMargin = leftLeg.Margin;
            leftLegMargin.Top = 316;
            leftLegMargin.Left = 360;
            leftLeg.Margin = leftLegMargin;

            Thickness rightLegMargin = rightLeg.Margin;
            rightLegMargin.Top = 316;
            rightLegMargin.Left = 388;
            rightLeg.Margin = rightLegMargin;

            Thickness leftArmMargin = leftArm.Margin;
            leftArmMargin.Top = 240;
            leftArmMargin.Left = 362;
            leftArm.Margin = leftArmMargin;

            Thickness rightArmMargin = rightArm.Margin;
            rightArmMargin.Top = 240;
            rightArmMargin.Left = 386;
            rightArm.Margin = rightArmMargin;
        }

        //hangs the body up at start of new game
        private void HangBody()
        {
            Thickness headMargin = head.Margin;
            headMargin.Top = 116;
            headMargin.Left = 344;
            head.Margin = headMargin;

            Thickness bodyMargin = body.Margin;
            bodyMargin.Top = 160;
            bodyMargin.Left = 366;
            body.Margin = bodyMargin;

            Thickness leftLegMargin = leftLeg.Margin;
            leftLegMargin.Top = 249;
            leftLegMargin.Left = 352;
            leftLeg.Margin = leftLegMargin;

            Thickness rightLegMargin = rightLeg.Margin;
            rightLegMargin.Top = 249;
            rightLegMargin.Left = 380;
            rightLeg.Margin = rightLegMargin;

            Thickness leftArmMargin = leftArm.Margin;
            leftArmMargin.Top = 172;
            leftArmMargin.Left = 354;
            leftArm.Margin = leftArmMargin;

            Thickness rightArmMargin = rightArm.Margin;
            rightArmMargin.Top = 172;
            rightArmMargin.Left = 378;
            rightArm.Margin = rightArmMargin;
        }

        //paints body white and puts it back on the hanging thing
        private void NewBody()
        {
            head.Stroke = Brushes.White;
            body.Stroke = Brushes.White;
            leftLeg.Stroke = Brushes.White;
            rightLeg.Stroke = Brushes.White;
            leftArm.Stroke = Brushes.White;
            rightArm.Stroke = Brushes.White;
            HangBody();
        }

        //creates the array
        private void CreateWords()
        {
            words = System.IO.File.ReadAllLines(@"D:\Random\ProgrammingProjects\Hangman\HangmanWords.txt");
        }
    }
}
